A Survey on Context-Aware Multi-Agent Systems: Techniques, Challenges and
Future Directions

Hung Du , Srikanth Thudumu , Rajesh Vasa and Kon Mouzakis
Applied Artificial Intelligence Institute (A2I 2), Deakin University, Geelong, VIC 3216, Australia
{hung.du, srikanth.thudumu, rajesh.vasa, kon.mouzakis}@deakin.edu.au







Abstract

Research interest in autonomous agents is on the
rise as an emerging topic. The notable achieve-
ments of Large Language Models (LLMs) have
demonstrated the considerable potential to attain
human-like intelligence in autonomous agents.
However,
the challenge lies in enabling these
agents to learn, reason, and navigate uncertain-
ties in dynamic environments. Context awareness
emerges as a pivotal element in fortifying multi-
agent systems when dealing with dynamic situa-
tions. Despite existing research focusing on both
context-aware systems and multi-agent systems,
there is a lack of comprehensive surveys outlining
techniques for integrating context-aware systems
with multi-agent systems. To address this gap, this
survey provides a comprehensive overview of state-
of-the-art context-aware multi-agent systems. First,
we outline the properties of both context-aware sys-
tems and multi-agent systems that facilitate integra-
tion between these systems. Subsequently, we pro-
pose a general process for context-aware systems,
with each phase of the process encompassing di-
verse approaches drawn from various application
domains such as collision avoidance in autonomous
driving, disaster relief management, utility man-
agement, supply chain management, human-AI in-
teraction, and others. Finally, we discuss the ex-
isting challenges of context-aware multi-agent sys-
tems and provide future research directions in this
field.

1 Introduction

In recent years, the remarkable success of Large Language
Models (LLMs) has demonstrated substantial promise in
achieving human-like intelligence [Bubeck et al., 2023;
Hauptman et al., 2023; Wang et al., 2023]. LLMs en-
dow agents with the capacity to learn and reason about the
behaviors, goals, and beliefs of other artificial intelligence
(AI) agents or humans, facilitating effective task comple-
tion across diverse domains. This fosters the development
of autonomous agents, distinct from traditional agents that

rely on pre-defined rules or patterns within restricted envi-
ronments. An autonomous agent has the ability to plan and
act in dynamic environments through self-evaluation [Hong
et al., 2023; Madaan et al., 2023; Fernando et al., 2023].
However, the limitations of a single autonomous agent such
as inefficiency, high cost, and unreliability [Li and Tan, 2019;
Amirkhani and Barshooi, 2022] become apparent when ad-
dressing distributed complex tasks such as microgrid control
[Kantamneni et al., 2015], resource allocation in cloud com-
puting [De la Prieta et al., 2019], as well as in the realms of
computer networking and security, and other complex tasks
[Dorri et al., 2018]. Overcoming these limitations requires
the implementation of a system that allocates task responsi-
bilities among autonomous agents, enabling effective coor-
dination and communication during task resolution. Addi-
tionally, in a specific task, a collective of autonomous agents
needs to adapt to changes of the environment by constantly
learning and updating their knowledge over time. This re-
sults in the growing attention to the field of context-aware
multi-agent systems where agents comprehend their knowl-
edge according to perceived contextual information to adapt
to any situation and optimally solve allocated tasks. Applica-
tion domains of such systems include collision avoidance in
autonomous driving, disaster relief management, utility man-
agement, supply chain management, human-AI interaction,
intrusion detection in cybersecurity, and other complex prob-
lems.

Multi-Agent Systems

(MAS) comprise multiple au-
tonomous agents that interact within a shared environment,
autonomously making decisions to accomplish tasks or ad-
dress complex problems. An autonomous agent in MAS is
endowed with initial knowledge about a given task and pos-
sesses its own set of goals. While engaged in task-solving, the
agent interacts with other agents or the environment to per-
ceive and comprehend information. It independently makes
decisions based on its objectives, existing knowledge, and ob-
servations, subsequently executing actions [Zhu et al., 2022;
Zhou et al., 2023]. Depending on the taskâ€™s characteristics,
agents can collaborate or compete strategically to outperform
opponents. These attributes confer flexibility and adaptability
on agents in dynamic environments, making MAS suited for
addressing complex problems.

In MAS, an autonomous agent forms its beliefs based on
its knowledge and observations of the environment and other

 
 
 
 
 
 
Figure 1: An Overview of Context-Aware Multi-Agent Systems

agents. Moreover, motivations for actions can vary among
agents. Consequently, determining the optimal solution for a
specific task necessitates effective communication, coordina-
tion, or competition in MAS. In cooperative settings, achiev-
ing consensus, and a shared agreement on a particular in-
terest is imperative for autonomous agents. Conversely, in
competitive scenarios, agents must analyze the behavior of
opponents, anticipate negative outcomes, and devise strate-
gies to address such challenges. It is worth noting that attain-
ing consensus or understanding the behavior of other agents
requires an autonomous agent to be aware of the context,
including roles, organizational structure, situations, and lo-
cation [Horling and Lesser, 2004; Amirkhani and Barshooi,
2022]. Therefore, the integration of context-aware systems
into multi-agent systems, as known as context-aware multi-
agent systems, becomes essential.

Context-Aware Systems (CAS) pertain to systems that dy-
namically adapt to the environment by leveraging context to
retrieve prominent information for tasks or problems. Con-
text encompasses various perceptual elements such as people,
location, physical or virtual objects, events, and other infor-
mation delineating the situation of an autonomous agent in a
specific environment [Abowd et al., 1999]. The CAS process
involves three primary stages: context acquisition, context
abstraction and comprehension, and context utilization. [Lee
et al., 2011; Perera et al., 2013; Alegre et al., 2016]. Through
this continuous process, autonomous agents acquire contex-
tual cues to comprehend the current environmental state and
undertake actions relevant to the situation. In the context of
autonomous agents, contextual information encompasses task
objectives, organizational structure, agent roles, and temporal
aspects. Such context assists agents precisely retrieving rele-
vant information for task accomplishment [Hong et al., 2023;
Qian et al., 2023; Chen et al., 2023].

Considerable efforts have focused on either MAS or CAS.
For instance, [Dorri et al., 2018] conducted a survey out-
lining aspects of MAS, such as agent properties, organiza-
tional structures, coordination control, and communication.
The survey also emphasized distinctions between MAS and
related systems, such as object-oriented programming and
expert systems (see Section 2). Other surveys have delved
into specific aspects of MAS, including consensus [Qin et

al., 2016; Li and Tan, 2019; Amirkhani and Barshooi, 2022],
communication [Zhu et al., 2022], formation control [Liu and
Bucknall, 2018; Litimein et al., 2021; Liu et al., 2023], or-
ganizational structures [Horling and Lesser, 2004], and deep
reinforcement learning (DRL) for MAS [Nguyen et al., 2020;
Gronauer and Diepold, 2022; Zhou et al., 2023]. On the
other hand, surveys related to CAS can be categorized into
two streams:
fundamental overviews and domain-specific
applications. Fundamental overviews highlight the general
processes of CAS, context modeling approaches, and de-
sign principles for architecting CAS [Baldauf et al., 2007;
Hoareau and Satoh, 2009; Lee et al., 2011; Alegre et al.,
2016; Pradeep and Krishnamoorthy, 2019]. Research on
domain-specific applications of CAS includes recommenda-
tion systems [Abbas et al., 2015; Kulkarni and Rodd, 2020;
Casillo et al., 2023], Internet of Thing (IoT) [Perera et al.,
2013], cloud and frog computing [Islam et al., 2021], and
healthcare systems [Vahdat-Nejad et al., 2021]. Despite
the popularity of CAS and MAS, as well as the substan-
tial research efforts in these fields, the comprehensive ex-
ploration of Context-Aware Multi-Agent Systems (CA-MAS)
for achieving the robustness and adaptability of autonomous
agents in dynamic environments has been lacking. To bridge
this gap, we conducted a comprehensive survey outlining ex-
isting CA-MAS to understand the general process of CA-
MAS, its challenges, and future directions.

The rest of this paper is organized as follows. Section
2 introduces the background of MAS. Section 3 highlights
the definition of context, the general process of CAS, and
the characteristics of CAS. Section 4 presents the definition
of awareness in MAS and provides a thorough overview of
the general process of CA-MAS. Finally, we highlight exist-
ing challenges in CA-MAS, along with future directions, and
conclude this paper in Sections 5 and 6, respectively.

2 Multi-Agent Systems
An agent is an autonomous and computational entity (e.g., a
software, a hardware component, or a combination of both)
that operates within an environment to achieve specific tasks
or goals [Nguyen et al., 2020; Gronauer and Diepold, 2022].
Furthermore, an agent is characterized by its ability to per-
ceive its surroundings, make decisions based on available in-

formation, and execute actions to influence the environment.
Such characteristics enable the sociability, autonomy, and
adaptability of an agent in MAS. As highlighted by [LeCun,
2022], intelligent properties of an autonomous agent encom-
pass the following interconnected components: (1) Percep-
tion, where the agent senses information and estimates the
current environment state; (2) Memory, storing historical and
future environment states; (3) World Model, utilizing knowl-
edge to predict missing information and future states; (4)
Configurator, transforming information into a goal-oriented
format; (5) Actor, proposing action plans and identifying op-
timal sequences; and (6) Cost, evaluating actions based on
objectives.

The environment in a MAS serves as the operational space
where agents operate and pursue goals. It consists of percep-
tual data and dynamic changes of state [Dorri et al., 2018].
This environment provides the context guiding an agentâ€™s
decision-making process. As illustrated in Figure 1, the task-
solving process involves five steps [Mostafa et al., 2013;
Dorri et al., 2018]: perceiving information from the environ-
ment, storing it in memory, processing the information based
on the task, comprehending task requirements, formulating a
plan, executing actions, and learning from outcomes.

Multi-Agent Systems

(MAS) comprise multiple au-
tonomous agents interacting with each other and their envi-
ronment to achieve goals. Four main advantages of using a
MAS over a single-agent one include cost-effectiveness, reli-
ability, scalability, and robustness in handling complex tasks
[Li and Tan, 2019; Amirkhani and Barshooi, 2022]. However,
three main aspects of a MAS such as organizational structure,
consensus, and formation control result in the complexity of
MAS. Furthermore, three main features such as autonomy,
communication, and society are three main features distin-
guishing between MAS, expert systems, and object-oriented
programming [Dorri et al., 2018]. For instance, each agent
in MAS has its own goal(s) and can communicate with other
agents in the network to make decisions and act on the en-
vironment, whereas objects in object-oriented programming
or experts in an expert system are restricted by a set of pre-
defined constraints of a particular problem. Due to the inter-
actions among agents in MAS, their relationships are formed
into one of the following categories: cooperation or compe-
tition. Cooperative MAS encompasses systems where agents
collaborate with a shared objective of accomplishing com-
mon goals or addressing complex problems. Achieving this
purpose necessitates organizing agents into groups with coor-
dination, establishing communication protocols among them,
and reaching consensus agreements [Torreno et al., 2017;
Ismail et al., 2018; Amirkhani and Barshooi, 2022]. On the
other hand, competitive MAS characterizes systems in which
agents operate with the primary goal of optimizing their indi-
vidual objectives. To attain this, an agent engages in strategic
decision-making, with the aim of outperforming or gaining
advantages over other agents [Liu et al., 2022].

An organizational structure, encompassing roles, relation-
ships, and authority, plays a pivotal role in simplifying
agentsâ€™ models, controlling agentsâ€™ behavior, and reducing
uncertainty. Additionally, it facilitates the tracking and es-
tablishment of effective communication among agents when

solving complex tasks. Ten organizational structures, such
as (1) flat, (2) hierarchies, (3) holarchies, (4) coalitions, (5)
teams, (6) congregations, (7) societies, (8) federations, (9)
markets, and (10) matrix, have been identified [Horling and
Lesser, 2004]. Furthermore, the coordination of Multi-Agent
Systems (MAS) can operate in either a decentralized or cen-
tralized environment [Dorri et al., 2018]. The selection of an
organizational structure or a combination of multiple struc-
tures depends on task characteristics and agentsâ€™ capabilities.
The diversity of agents, inferred from differences in knowl-
edge, capability, characteristics, behaviors, and other contex-
tual information, represents a crucial dimension of agent or-
ganization. [Esmaeili et al., 2016] demonstrated the impact
of diversity in agentsâ€™ capabilities and behaviors on a holonic
organization in MAS. Moreover, [Li et al., 2021] investigated
a technique focusing on behavioral diversity in MAS, aiming
to control the trade-off between the heterogeneous behaviors
of an agent resulting from knowledge exploration and the ho-
mogeneous behaviors obtained through knowledge sharing in
multi-agent coordination tasks. Just as behavioral diversity
strengthens agent performance, environmental diversity en-
hances the agentâ€™s generalization capability in MAS [McKee
et al., 2022].

Once an organizational structure is established, achieving
consensus, and mutual agreement on a common value or
state becomes essential for enabling information exchange
among agents. This, in turn, allows an agent to formu-
late its Belief-Desire-Intention (BDI) model for coordina-
tion when addressing complex problems [Ren et al., 2005].
The two primary challenges in agent communication encom-
pass data flow issues, such as data continuity and commu-
nication delays, and data quality concerns, including out-
liers, and missing, or incomplete information [Qin et al.,
2016]. To overcome these challenges, the literature has ex-
plored nine communication protocols, including (1) leader-
follower consensus, (2) group/cluster consensus, (3) scaled
consensus, (4) finite-time consensus, (5) bipartite consen-
sus, (6) sampled-data consensus, (7) quantized consensus,
(8) network-based consensus, and (9) the combination of
consensus with tracking mechanisms [Qin et al., 2016; Li
and Tan, 2019; Amirkhani and Barshooi, 2022]. Addition-
ally, optimizing the frequency of information transactions
and computing resources per transaction is crucial to enhance
communication flow for efficient coordination. To achieve
this goal, existing trigger mechanisms controlling consen-
sus can be divided into two groups: event-based consensus
control and time-based consensus control [Qin et al., 2016;
Li and Tan, 2019]. The former triggers communication based
on situations exceeding a pre-defined threshold or changes
of state, while the latter triggers communication periodically
based on a pre-defined time interval or selected data sam-
ples. Furthermore, to ensure data quality during consensus
in MAS, robust consensus control and adaptive consensus
control have been investigated. Techniques for such control
mechanisms can be categorized into two groups: feedback
control and feed-forward control [Amirkhani and Barshooi,
2022].

3 Context-Aware Systems

Context encompasses various types of information, such as
people, locations, physical or virtual objects, events, time,
and other data that can be employed to introduce different
dimensions of a situation or conceptual information regard-
ing specific circumstances [Abowd et al., 1999]. Addition-
ally, five key properties characterize context:
type, value,
time when sensed, source where the information was gath-
ered, and confidence in information accuracy [Baldauf et al.,
2007]. Furthermore, context can be categorized into two
groups: intrinsic context and extrinsic context. In the con-
text of MAS, the former specifies the internal factors of an
agent (e.g., goals, tasks, behavior, belief, knowledge, etc.),
while the latter focuses on external factors, such as the en-
vironment, situations, social influence, and more. Existing
context modeling techniques in the literature fall into six cat-
egories: (1) key-value models, (2) markup schema models,
(3) graphical models, (4) object-oriented models, (5) logical-
based models, and (6) ontology-based models [Strang and
Linnhoff-Popien, 2004]. The choice of a context modeling
technique depends on the complexity and dynamics of the
context. For instance, key-value models are suitable for sit-
uations where simplicity is crucial, although they lack scal-
ability and the ability to capture relationships within con-
text. To address these challenges, other context modeling
techniques are employed. It is worth noting that ontology-
based context models are widely utilized due to their ca-
pability for semantic reasoning and representation of con-
text relationships through knowledge graphs [Baldauf et al.,
2007]. However, challenges associated with ontology-based
context modeling include the difficulty in understanding on-
tology complexity and the substantial cost of maintaining
ontologies, as highlighted in [Hoareau and Satoh, 2009].
While modeling or reasoning about context, it is crucial to
consider several aspects: (1) the quality of context, includ-
ing accuracy and completeness of information; (2) relation-
ships between context elements; and (3) the flow of con-
text, such as time-invariant context, time-variant context, and
consistency in context switching [Hoareau and Satoh, 2009;
Bellavista et al., 2012].

Context-Aware Systems (CAS) are autonomous systems
that leverage context to dynamically adapt to situations and
retrieve relevant information for tasks or problems. Depend-
ing on the level of agent autonomy and interactions among
agents, there are two types of context awareness: (1) passive
context awareness, where an agent constantly produces ob-
servations from the environment that can be utilized by other
agents; and (2) active context awareness, where an agent con-
tinuously and autonomously acts based on its observations
from the environment [Perera et al., 2013]. As illustrated
in Figure 1, the general process of CAS consists of three
stages: (1) context acquisition, (2) context abstraction and
comprehension, and (3) context utilization [Lee et al., 2011;
Perera et al., 2013]. Context acquisition involves the process
of sensing and storing information. In the context of MAS, an
agent can sense information from its knowledge, other agents,
or the environment. It is noteworthy that an agent may sense
multiple types of context, periodically coming from vari-

ous sources [Baldauf et al., 2007; Hoareau and Satoh, 2009;
Perera et al., 2013]. Based on the architectural style, context-
aware systems can be categorized into three groups [Lee et
al., 2011]:

â€¢ Stand-alone CAS: This type features a single source of
context where agents sense and store information inde-
pendently.

â€¢ Centralized CAS:

Involving a centralized context
server, this architecture stores contextual information
collected by sensors from various sources.

â€¢ Decentralized CAS: This architecture does not rely on
a central server; instead, it comprises multiple intercon-
nected nodes, each functioning as a stand-alone CAS.

It is crucial to recognize that contextual information obtained
from agents constitutes raw data. As a result, this data re-
quires pre-processing and encapsulation to enable the inter-
pretation of its semantics for a specific task or problem, a
procedure commonly referred to as context abstraction and
comprehension. This process involves techniques that can be
classified into two types: context modeling and context rea-
soning. Context reasoning techniques, in particular, provide
agents with the capability to infer knowledge from imperfect
context and uncertainty. These techniques can be further cat-
egorized into six groups: (1) supervised learning, (2) unsu-
pervised learning, (3) rule-based algorithms, (4) fuzzy logic,
(5) ontology-based reasoning, and (6) probabilistic reason-
ing [Perera et al., 2013; Pradeep and Krishnamoorthy, 2019].
During the context utilization stage, an agent employs con-
textual information through its active triggering mechanisms.
Additionally, this information is distributed to other agents,
guiding their decisions in solving complex tasks.

4 Context-aware Multi-agent Systems
Addressing time-varying uncertainties, such as the dynam-
ics of an environment and the non-linearity of autonomous
agents, poses a significant challenge in MAS. Overcoming
this challenge entails agents being aware of changes in the
environment or behavioral shifts of other agents within the
system and consistently updating their beliefs based on ob-
servations. Achieving this goal requires the integration of
CAS and MAS, resulting in what is termed Context-Aware
Multi-Agent Systems (CA-MAS).

4.1 Awareness in MAS
Agent-based awareness techniques can be categorized into
three groups: (1) Active perception, where an agent takes
action based on its observations in an environment; (2) sit-
uation awareness, which involves reasoning about the current
event and predicting future events as additional capabilities
for agents to perform an optimal set of actions in a partic-
ular situation; and (3) context awareness, where context is
utilized as the semantics of an event or a situation to enhance
the agentâ€™s comprehension (see also Section 3) [Mostafa et
al., 2013]. Specifically, an agent is considered context-aware
when its behavior and actions adapt to the context it senses.

In MAS, an agent perceives both intrinsic and extrinsic
context. The intrinsic context involves an agentâ€™s goals,

roles, historical data (e.g., knowledge, previous actions),
intent, and observations. Extrinsic context is categorized
into user-specific context (e.g., location, preferences, calen-
dar, weather, behavior from the user), agent-specific con-
text (knowledge or intent sharing among agents, observations
about roles or behavior of other agents), and system-specific
context (system requirements, policies, organizational struc-
tures, and communication protocols followed by agents for
optimal problem-solving in specific situations). Moreover,
hierarchies, teams, markets, and holarchies (see also Sec-
tion 3) are predominantly used to organize CA-MAS in di-
verse problem domains such as negotiation, recommenda-
tion systems, disaster management, utility management, and
others [Fuentes et al., 2006; Kwon et al., 2006; Jakob-
son et al., 2006; Fu and Fu, 2015; Nadi and Edrisi, 2017;
Yan et al., 2018; Haiouni and Maamri, 2019; Riabchuk et
al., 2022]. Agent-specific context involves knowledge or in-
tent sharing among agents and an agentâ€™s observations about
roles or behavior of other agents. It is noteworthy that agents
in CA-MAS can be either communicating agents or non-
communicating agents [Everett et al., 2018]. A communicat-
ing agent exchanges information or intent with other agents
in the system via the communication protocol. On the other
hand, a non-communicating agent does not exchange infor-
mation with other agents; however, its behavior can be sensed
or predicted based on its actions. For instance, in a com-
petitive MAS setting, an agent performs actions based on
observations and predictions about the actions of opponents
[Nezamoddini and Gholami, 2022]. Another example is in
autonomous driving agents, where, to avoid collisions on the
road, agents must act based on observations [Everett et al.,
2018; Xie et al., 2021; Wu et al., 2023].

4.2 The General Process of CA-MAS

The general process of CA-MAS comprises five phases:
Sense-Learn-Reason-Predict-Act. Details of each phase are
specified below.

Sense

An agent in MAS gathers contextual information from its sen-
sors, detects context patterns, and handles temporal changes
of context. Context can be sensed from a stand-alone node,
a centralized database, or through communication and inter-
action among agents (see also Section 3). As the context is
sensed from multiple sources or agents, relationships between
contexts may exist, forming a context graph utilized as con-
text patterns to infer relevant situations to the agent [Olaru et
al., 2013]. Moreover, the constant change in the environment
increases the number of contexts, followed by the number of
connections in the context graph. However, an agent may fo-
cus on a specific subset of context while solving a task. To
overcome the challenge of managing context changes in dy-
namic environments, [Julien and Roman, 2004] applied the
Network Abstractions model. This model uses a specialized
cost function to enable agents to manage shifting contexts
in dynamic environments. The cost function focuses on an
agentâ€™s reachability to key contextual information.

Learn
An agent learns representations of information along with the
sensed context for a specific task. Modeling techniques uti-
lized to obtain such representations can be divided into three
categories: context modeling, weighting mechanisms, and
deep learning.

Three context modeling techniques such as key-value mod-
els, object-oriented models, and ontology-based models have
widely been used in existing CA-MAS. To model trust among
agents, a critical factor in forming coalitions or teams for ef-
fective problem-solving, [Wan and Alagar, 2008] proposed
a CA-MAS technique that utilizes the key-value model to
represent either the internal or external context of agents.
This model associates such context with trust attributes such
as safety, security, reliability, and availability. Furthermore,
as the environment changes over time, agent-based systems
need to be aware of such changes to propose effective plans
[Ferrando and Onaindia, 2013] and
in specific situations.
[Haiouni and Maamri, 2019] proposed context-aware multi-
agent planning approaches that capture the environmentâ€™s
state and state value at a certain time as a key-value pair, en-
hancing planning activities in MAS. Moreover, to optimize
the planning cost and resource utilization of electric vehicle
fleet routing in urban operations, [Jelen et al., 2022] proposed
CA-MAS, applying the object-oriented model to represent
contexts, such as weather forecast data and point of inter-
est data. In addition to key-value pairs and object-oriented
models, ontology-based models have been utilized in MAS to
represent the semantics of contextual information in complex
problems. Examples include user profiling in recommenda-
tion systems [Fuentes et al., 2006], security awareness [Bey-
doun et al., 2009], situation-aware disaster and relief man-
agement [Jakobson et al., 2006], multi-dimensional learn-
ing [Vladoiu and Constantinescu, 2010], collaborative situ-
ation awareness [Castellano et al., 2014], cost collaborative
management in supply chains [Fu and Fu, 2015], augmented
decision-making processes with smart resource-bounded de-
vices [Yousaf et al., 2023], and other problems.

To address the scalability of context modeling techniques,
CA-MAS with weighting mechanisms were proposed and
categorized into two groups: statistical approaches [Kwon
and Sadeh, 2004; Twardowski and Ryzko, 2015; Yan et
al., 2018; Lee and Hasan Kabir, 2022; Riabchuk et al.,
2022] and graph-based approaches [Julien and Roman, 2004;
Yusuf and Baber, 2022]. Specifically, the weighting mecha-
nism encompasses three components: (1) vector representa-
tion, where context values are transformed into a machine-
readable format and stored in a vector; (2) weight estima-
tion, where weights are measured by aggregating between
context vectors and other vectors representing other entities
in the system; and (3) weight utilization, where estimated
[Kwon
weights are used for goal-oriented optimization.
and Sadeh, 2004] proposed a CA-MAS that estimates the
weight of an agent by aggregating between the vector of
contextual information and the utility vector of that agent
for automating negotiation tasks between buyers and sell-
ers. Furthermore, [Lee and Hasan Kabir, 2022] proposed
the density-aware CA-MAS that utilizes agentsâ€™ density dis-
tribution as context vectors to optimize the spatial explo-

ration of a team of robots. Moreover, domain-specific con-
textual information, such as utility usage [Yan et al., 2018;
Riabchuk et al., 2022] and mobile usage [Twardowski and
Ryzko, 2015], gathered from Multi-Agent Systems (MAS),
is stored in a vector for weight estimation in recommenda-
tion systems. Aside from statistical approaches, [Yusuf and
Baber, 2022] proposed a CA-MAS that stores contextual in-
formation gathered by unmanned aerial vehicles (UAVs) in
vectors, applies Bayesian belief network (BBN) to estimate
weights based on the relationships between such vectors, and
uses these weights for fire spread detection.

As the agentâ€™s observation space expands, the volume of
context vectors and their dimensions increase, leading to the
high-dimensional dilemma, also known as the curse of di-
mensionality. Furthermore, due to uncertainty and ambiguity,
integrating the weighting scheme with goal-oriented reason-
ing frameworks (see also Section 4.2) becomes challenging.
Overcoming these challenges necessitates the use of deep
learning techniques for two reasons. First, contextual infor-
mation can be represented in low-dimensional vector space.
Second, learning parameters can be optimized according to
a given goal or policy. The contextual information obtained
from agentsâ€™ observations is sequential and stored as histori-
cal data. To represent such sequential data, Recurrent Neural
Network (RNN) or Long Short-Term Memory (LSTM) is uti-
lized. [Everett et al., 2018] proposed a CA-MAS for motion
planning where LSTM was applied to encapsulate an agentâ€™s
observations about its nearby agents and pedestrian motion
in a scalar value and a discrete probability distribution over
its actions. [Tao et al., 2020] proposed a CA-MAS for mo-
tion prediction, forecasting the motion of other agents while
driving. In this approach, time-varying agentsâ€™ observations
were presented using LSTM, and such representations were
then aggregated with the semantic representation of the lat-
est observed motions. This supports an agent in MAS to
learn both spatial dependencies and temporal coherence of
moving agents. Pedestrian trajectories are also crucial for
estimating uncertainty in autonomous driving. To achieve
this goal, [Katyal et al., 2020] proposed a CA-MAS where
the integration of pedestrian trajectories and agentsâ€™ obser-
vations was represented via the Encoder-Decoder architec-
ture consisting of stacked LSTM. Aside from using pedes-
trian trajectories as contextual cues, [Xie et al., 2021] uti-
lized congestion patterns as context, which were represented
by Graph Convolution Network integrated with Variational
Auto-Encoder (GCN-VAE) for trajectory prediction. On the
other hand, contextual information in CA-MAS can be repre-
sented by a multi-layer perceptron (MLP). Additionally, deep
reinforcement learning (DRL) techniques were employed to
optimize such representations according to a specific goal or
feedback [Qi and Zhu, 2018; Chen et al., 2020; Chen and
Chaudhari, 2021; Mahajan and Zhang, 2023; Fan et al., 2023;
Wu et al., 2023].

Reason
Agents analyze information or formulate a set of plans based
on the sensed context to achieve their objectives. Various rea-
soning models, including rule-based reasoning, case-based
reasoning, fuzzy logic, graph-based reasoning, and goal-

oriented reasoning, have been employed.

Rule-based reasoning involves a predefined set of rules
governing how agents respond to specific conditions or
events. In the context of CA-MAS, [Wan and Alagar, 2008]
incorporated a set of rules to model trust, while [Ferrando and
Onaindia, 2013] utilized defeasible rules to formulate argu-
ments supporting the planning process. To enhance the rea-
soning capabilities of agents in complex situations, [Haiouni
and Maamri, 2019] proposed the Hierarchical Colored Petri
Net, an extension of the Petri Net [Murata, 1989], which ap-
plies agent hierarchies to the planning process in CA-MAS.
In the domain of urban planning, [Jelen et al., 2022] imple-
mented a rule-based routing algorithm using contextual infor-
mation to identify urban parking lots or charging stations for
electric vehicles. Meanwhile, [Yousaf et al., 2023] enhanced
agent reasoning capabilities by applying rules to identified
matching patterns in the context ontology. An extension of
rule-based reasoning is fuzzy logic, where agents can rep-
resent and process information with a certainty degree for a
particular situation based on semantic rules. In this regard,
[Castellano et al., 2014] employed a neuro-fuzzy network,
representing fuzzy rules as a neural network architecture to
map contextual information to specific situations.

Case-based reasoning (CBR) empowers agents to retrieve,
reuse, revise, and retain casesâ€”representing their past expe-
riences. This aims to support agents to adapt and make de-
cisions in similar situations [Watson and Marir, 1994].
In
CA-MAS proposed by [Kwon and Sadeh, 2004], CBR is ap-
plied to retrieve similar cases based on contextual information
during negotiation tasks. In the domain of multi-dimensional
learning, [Vladoiu and Constantinescu, 2010] employed CBR
with agentsâ€™ ontology to retrieve learning scenarios tailored to
the userâ€™s interests. Furthermore, [Fu and Fu, 2015] equipped
agents with both rule-based reasoning and CBR, integrated
on top of their context ontology. This integration allows
agents to derive high-level business context from low-level
contextual information for collaborative cost management in
the supply chain.

Graph-based reasoning endows agents with the capability
to analyze complex interactions, dependencies, and patterns
within graph structures. CA-MAS in [Fuentes et al., 2006]
personalized recommendations for users by matching their
contextual information with patterns identified within agentsâ€™
context ontology. Agents in both [Beydoun et al., 2009] and
[Feyzi, 2020] utilized meta-models, encompassing agentsâ€™
contextual information, relationships among such informa-
tion, and inter-agent relationships, for reasoning in specific
In another approach, [Olaru et al., 2013] intro-
situations.
duced the Tri-Graph, a union of graphs representing restricted
environments, contextual information, and agent topology.
This graph captures context patterns for reasoning purposes.
The integration of Bayesian belief networks (BBN) and a
graph of contextual information in [Yusuf and Baber, 2022]
supports agents in reasoning about specific situations, such as
fire spread detection, based on their probability.

In goal-oriented reasoning, agents prioritize and plan ac-
tions based on their goals. While other reasoning tech-
niques that rely on pre-programmed conditions, patterns, or
cases, agents with goal-oriented reasoning capability adapt to

any situation to optimally achieve their goals. In CA-MAS,
techniques for goal-oriented reasoning can be categorized
into three groups: cost-based models, belief-desire-intention
(BDI) models, and reinforcement learning (RL). Agents with
the cost-based model perform actions to optimize the cost
function, such as mean squared error (MSE) [Riabchuk et al.,
2022] and regularized square error [Twardowski and Ryzko,
2015] in recommendation systems, similarity measurement
[Tao et al., 2020; Xie et al., 2021], or probabilistic mea-
surement [Lee and Hasan Kabir, 2022] for pattern matching.
Furthermore, agents utilize their world model and intrinsic
motivation (see also Section 2) to formulate plans supporting
their goals. To represent the mental states of agents, the BDI
model is applied. [Jakobson et al., 2006] extended the tradi-
tional BDI model by adding the Plan module, which consists
of context ontology and enhances agentsâ€™ recognition of dy-
namic situations. Moreover, reasoning with feedback, which
is from both the environment and other agents, supports an
agent to adapt to situations. To attain this, RL techniques
are applied. In RL, an agent aims to maximize its rewards
by selecting an optimal action based on a policy at a partic-
ular state [Sutton and Barto, 2018]. The use of Q-learning
[Watkins and Dayan, 1992], one of the well-known RL tech-
niques, supports CA-MAS to reason about human requests
in disaster relief management [Nadi and Edrisi, 2017], the
behavior of drivers or other agents in autonomous driving
[Chen and Chaudhari, 2021], and human intention in smart
homes [Huang et al., 2022]. In addition to RL techniques,
deep RL (DRL) techniques, which address the challenge of
high computational resources for representing complex states
or actions, were also applied in existing CA-MAS for au-
tonomous navigation [Qi and Zhu, 2018; Everett et al., 2018;
Chen et al., 2020; Fan et al., 2023; Mahajan and Zhang, 2023;
Wu et al., 2023].

Predict
An agent projects scenarios or events that may occur in the
near future. In CA-MAS with pre-defined rules, cases, or pat-
terns, agents may lack prediction capability due to restricted
conditions, weakening their ability to deal with uncertainties.
To address this challenge, agents are equipped with predic-
tive models that estimate near-future events using weight-
ing schemes, probabilities, or rewards. To minimise errors
from such predictive models, distance-based [Twardowski
and Ryzko, 2015; Yan et al., 2018; Riabchuk et al., 2022;
Lee and Hasan Kabir, 2022] or reward-based [Nadi and
Edrisi, 2017; Qi and Zhu, 2018; Everett et al., 2018; Chen
et al., 2020; Chen and Chaudhari, 2021; Huang et al., 2022;
Fan et al., 2023; Mahajan and Zhang, 2023; Wu et al., 2023]
cost functions are applied. Particularly, the distance-based
cost function aims to minimize either the value distance or
the distribution distance between the prediction and the ex-
pectation. Additionally, the reward-based cost function aims
to minimize prediction errors that yield negative rewards.

Act
An agent executes a set of actions and subsequently re-
ceives rewards that can be utilized to navigate or optimize
its activities.
In CA-MAS, an agentâ€™s action can be de-
fined by pre-defined conditions or goals. In scenarios with

pre-defined conditions, agents follow pre-programmed rules,
cases, matched patterns, or a set of threshold values of proba-
bility to select an appropriate action in a specific situation. On
the other hand, agents execute actions based on either deter-
ministic or stochastic policies at a particular state to optimize
their rewards in one or more than one goal.

5 Challenges and Future Directions

CA-MAS is an emerging research topic. Although extensive
efforts have been made on the integration between CAS and
MAS in diverse problem domains, there are research direc-
tions worthy of future explorations.

Many context-aware multi-agent systems relax organiza-
tional constraints, causing two challenges. First, ineffec-
tive context sharing as one agentâ€™s irrelevant context intro-
duces noise, reducing performance. Second, without struc-
ture, security and privacy concerns arise when sharing sen-
sitive contextual information like identity and location. Un-
trusted agents may exist, threatening the system. Unautho-
rized access leads to privacy violations. Addressing this re-
quires investigating whether organizational structures in these
systems can enhance trust by defining agent relationships and
organizing information access to improve security and pro-
ductive context sharing.

The assumptions of consensus among agents have also
been relaxed in existing CA-MAS. This leads to several is-
sues in CA-MAS, such as uncertainty and ambiguity, where
there is incomplete information and semantic mismatch be-
tween such information, as well as conflicts among agents.
Addressing these issues enhances the robustness of agents
in dealing with uncertainties and improves the effectiveness
of learning strategies with joint information when solving
specific tasks. However, solutions for these issues have not
been actively discussed in the literature of CA-MAS. The
application of consensus can be one potential solution. Re-
search works such as those by [Yan et al., 2018] and [Xie et
al., 2021] have attempted leader-follower consensus to im-
prove information sharing among agents. Besides this type
of consensus, it is worth investigating techniques that utilize
other types of consensus [Qin et al., 2016; Li and Tan, 2019;
Amirkhani and Barshooi, 2022] in CA-MAS for diverse prob-
lem domains.

Agentsâ€™ ontology provides the semantic meaning of infor-
mation, supporting agents in comprehending situations for ef-
fective problem-solving. Many existing CA-MAS have em-
ployed ontology for both learning and reasoning tasks (see
also Section 4.2); however, these CA-MAS heavily depend
on pre-defined rules or patterns. This reliance affects the ro-
bustness of agents in dynamic environments where uncertain
rules or patterns are constantly emerging. The integration be-
tween CA-MAS and DRL (see also Section 4.2) addresses
such limitations. However, agentsâ€™ ontology is not utilized
in these systems. This may be due to two reasons: (1) the
complexity of representing agentsâ€™ ontology; and (2) the in-
tegration between those representations and DRL techniques.
Just as graph neural network (GNN) and its variants [Wu et
al., 2020] can potentially be utilized to address the first chal-
lenge; the Variational Auto-Encoder (VAE) architecture [Kipf

and Welling, 2016a; Kipf and Welling, 2016b] can be ap-
plied to transform those representations into DRL-compatible
ones. As this demonstrates the feasibility of the integration,
it would be interesting to explore novel approaches that inte-
grate agentsâ€™ ontology into DRL-based CA-MAS to enhance
the context comprehension of agents.

6 Conclusion
This survey provides a thorough overview of CA-MAS, rep-
resenting the integration of CAS and MAS. We outline foun-
dational knowledge to facilitate their integration and propose
a general process for CA-MAS based on research across do-
mains. Additionally, we highlight the challenges faced and
suggest future research directions for these systems.

Acknowledgments
This work is supported as part of the Higher Degree Research
(HDR) program at the Applied Artificial Intelligence Institute
(A2I 2), Deakin University.

References
[Abbas et al., 2015] Assad Abbas, Limin Zhang,

and
Samee U Khan. A survey on context-aware recommender
systems based on computational intelligence techniques.
Computing, 97:667â€“690, 2015.

[Abowd et al., 1999] Gregory D Abowd, Anind K Dey, Pe-
ter J Brown, Nigel Davies, Mark Smith, and Pete Steggles.
Towards a better understanding of context and context-
awareness. In Handheld and Ubiquitous Computing: First
International Symposium, HUCâ€™99 Karlsruhe, Germany,
September 27â€“29, 1999 Proceedings 1, pages 304â€“307.
Springer, 1999.

[Alegre et al., 2016] Unai Alegre, Juan Carlos Augusto, and
Tony Clark. Engineering context-aware systems and ap-
plications: A survey. Journal of Systems and Software,
117:55â€“83, 2016.

[Amirkhani and Barshooi, 2022] Abdollah Amirkhani and
Amir Hossein Barshooi. Consensus in multi-agent sys-
tems: a review. Artificial Intelligence Review, 55(5):3897â€“
3935, 2022.

[Baldauf et al., 2007] Matthias Baldauf, Schahram Dustdar,
and Florian Rosenberg. A survey on context-aware sys-
International Journal of ad Hoc and ubiquitous
tems.
Computing, 2(4):263â€“277, 2007.

[Bellavista et al., 2012] Paolo Bellavista, Antonio Corradi,
Mario Fanelli, and Luca Foschini. A survey of context data
distribution for mobile ubiquitous systems. ACM comput-
ing surveys (CSUR), 44(4):1â€“45, 2012.

[Beydoun et al., 2009] Ghassan Beydoun, Graham Low,
Haralambos Mouratidis, and Brian Henderson-Sellers. A
security-aware metamodel for multi-agent systems (mas).
Information and software technology, 51(5):832â€“845,
2009.

[Bubeck et al., 2023] SÂ´ebastien Bubeck, Varun Chan-
drasekaran, Ronen Eldan, Johannes Gehrke, Eric Horvitz,

Ece Kamar, Peter Lee, Yin Tat Lee, Yuanzhi Li, Scott
Lundberg, et al.
intelli-
arXiv preprint
gence: Early experiments with gpt-4.
arXiv:2303.12712, 2023.

Sparks of artificial general

[Casillo et al., 2023] Mario Casillo, Francesco Colace, Da-
jana Conte, Marco Lombardi, Domenico Santaniello, and
Carmine Valentino. Context-aware recommender systems
and cultural heritage: a survey. Journal of Ambient In-
telligence and Humanized Computing, 14(4):3109â€“3127,
2023.

[Castellano et al., 2014] Giovanna Castellano, Mario GCA
Cimino, Anna Maria Fanelli, Beatrice Lazzerini,
Francesco Marcelloni, and Maria Alessandra Torsello. A
multi-agent system for enabling collaborative situation
awareness via position-based stigmergy and neuro-fuzzy
learning. Neurocomputing, 135:86â€“97, 2014.

[Chen and Chaudhari, 2021] Xiaoyi Chen and Pratik Chaud-
hari. Midas: Multi-agent interaction-aware decision-
making with adaptive strategies for urban autonomous
In 2021 IEEE International Conference
navigation.
on Robotics and Automation (ICRA), pages 7980â€“7986.
IEEE, 2021.

[Chen et al., 2020] Baiming Chen, Mengdi Xu, Zuxin Liu,
Liang Li, and Ding Zhao. Delay-aware multi-agent rein-
forcement learning for cooperative and competitive envi-
ronments. arXiv preprint arXiv:2005.05441, 2020.

[Chen et al., 2023] Weize Chen, Yusheng Su, Jingwei Zuo,
Cheng Yang, Chenfei Yuan, Chen Qian, Chi-Min Chan,
Yujia Qin, Yaxi Lu, Ruobing Xie, et al. Agentverse: Facil-
itating multi-agent collaboration and exploring emergent
behaviors in agents. arXiv preprint arXiv:2308.10848,
2023.

[De la Prieta et al., 2019] Fernando De

la Prieta, Sara
RodrÂ´Ä±guez-GonzÂ´alez, Pablo Chamoso, Juan Manuel Cor-
chado, and Javier Bajo. Survey of agent-based cloud com-
puting applications. Future generation computer systems,
100:223â€“236, 2019.

[Dorri et al., 2018] Ali Dorri, Salil S Kanhere, and Raja Ju-
Ieee Access,

rdak. Multi-agent systems: A survey.
6:28573â€“28593, 2018.

[Esmaeili et al., 2016] Ahmad Esmaeili, Nasser Mozayani,
Mohammad Reza Jahed Motlagh, and Eric T Matson. The
impact of diversity on performance of holonic multi-agent
systems. Engineering Applications of Artificial Intelli-
gence, 55:186â€“201, 2016.

[Everett et al., 2018] Michael Everett, Yu Fan Chen, and
Jonathan P How. Motion planning among dynamic,
decision-making agents with deep reinforcement learning.
In 2018 IEEE/RSJ International Conference on Intelli-
gent Robots and Systems (IROS), pages 3052â€“3059. IEEE,
2018.

[Fan et al., 2023] Dongyu Fan, Haikuo Shen, and Lijing
Dong. Switching-aware multi-agent deep reinforcement
Applied Intelligence,
learning for target interception.
53(7):7876â€“7891, 2023.

[Fernando et al., 2023] Chrisantha Fernando, Dylan Ba-
narse, Henryk Michalewski, Simon Osindero, and Tim
RocktÂ¨aschel.
Self-referential self-
arXiv preprint
improvement via prompt evolution.
arXiv:2309.16797, 2023.

Promptbreeder:

[Ferrando and Onaindia, 2013] Sergio Pajares Ferrando and
Eva Onaindia. Context-aware multi-agent planning in in-
telligent environments. Information Sciences, 227:22â€“42,
2013.

[Feyzi, 2020] Farid Feyzi. Model-driven development of
self-adaptive multi-agent systems with context-awareness.
International Journal of Computer Aided Engineering and
Technology, 12(2):131â€“156, 2020.

[Fu and Fu, 2015] Jianxi Fu and Yuanlue Fu. An adaptive
multi-agent system for cost collaborative management in
supply chains. Engineering applications of artificial intel-
ligence, 44:91â€“100, 2015.

[Fuentes et al., 2006] Virginia Fuentes, Nayat SÂ´anchez Pi,
Javier Carbo, and JosÂ´e Manuel Molina. Reputation in user
profiling for a context-aware multiagent system. In EU-
MAS, 2006.

[Gronauer and Diepold, 2022] Sven Gronauer and Klaus
Diepold. Multi-agent deep reinforcement learning: a sur-
vey. Artificial Intelligence Review, pages 1â€“49, 2022.
[Haiouni and Maamri, 2019] Houda Haiouni and Ramdane
Maamri. Context-aware multi-agent planning in intelligent
environments. Multiagent and Grid Systems, 15(3):219â€“
236, 2019.

[Hauptman et al., 2023] Allyson I Hauptman, Beau G Schel-
ble, Nathan J McNeese, and Kapil Chalil Madathil. Adapt
and overcome: Perceptions of adaptive autonomous agents
for human-ai teaming. Computers in Human Behavior,
138:107451, 2023.

[Hoareau and Satoh, 2009] Christian Hoareau and Ichiro
Satoh. Modeling and processing information for context-
aware computing: A survey. New Generation Computing,
27:177â€“196, 2009.

[Hong et al., 2023] Sirui Hong, Xiawu Zheng, Jonathan
Chen, Yuheng Cheng, Jinlin Wang, Ceyao Zhang, Zili
Wang, Steven Ka Shing Yau, Zijuan Lin, Liyang Zhou,
et al. Metagpt: Meta programming for multi-agent col-
laborative framework. arXiv preprint arXiv:2308.00352,
2023.

[Horling and Lesser, 2004] Bryan Horling and Victor Lesser.
A survey of multi-agent organizational paradigms. The
Knowledge engineering review, 19(4):281â€“316, 2004.
[Huang et al., 2022] Chaoran Huang, Lina Yao, Xianzhi
Wang, Quan Z Sheng, Schahram Dustdar, Zhongjie Wang,
and Xiaofei Xu. Intent-aware interactive internet of things
for enhanced collaborative ambient intelligence. IEEE In-
ternet Computing, 26(5):68â€“75, 2022.

[Islam et al., 2021] Mir Salim Ul Islam, Ashok Kumar, and
Yu-Chen Hu. Context-aware scheduling in fog comput-
ing: A survey, taxonomy, challenges and future direc-

Journal of Network and Computer Applications,

tions.
180:103008, 2021.

[Ismail et al., 2018] Zool Hilmi Ismail, Nohaidda Sariff, and
E Gorrostieta Hurtado. A survey and analysis of coopera-
tive multi-agent robot systems: challenges and directions.
Applications of Mobile Robots, pages 8â€“14, 2018.

[Jakobson et al., 2006] Gabriel Jakobson, N Parameswaran,
John Buford, Lundy Lewis, and Pradeep Ray. Situation-
aware multi-agent system for disaster relief operations
management. Proc. ISCRAM, pages 313â€“324, 2006.

[Jelen et al., 2022] Goran Jelen, Jurica Babic, and Vedran
Podobnik. A multi-agent system for context-aware elec-
tric vehicle fleet routing: A step towards more sustain-
Journal of Cleaner Production,
able urban operations.
374:134047, 2022.

[Julien and Roman, 2004] Christine

and Gruia-
Catalin Roman. Supporting context-aware interaction in
dynamic multi-agent systems. In International Workshop
on Environments for Multi-Agent Systems, pages 168â€“189.
Springer, 2004.

Julien

[Kantamneni et al., 2015] Abhilash Kantamneni, Laura E
Brown, Gordon Parker, and Wayne W Weaver. Survey
of multi-agent systems for microgrid control. Engineering
applications of artificial intelligence, 45:192â€“203, 2015.
[Katyal et al., 2020] Kapil D Katyal, Gregory D Hager, and
Chien-Ming Huang. Intent-aware pedestrian prediction for
In 2020 IEEE International
adaptive crowd navigation.
Conference on Robotics and Automation (ICRA), pages
3277â€“3283. IEEE, 2020.

[Kipf and Welling, 2016a] Thomas N Kipf

and Max
Welling. Semi-supervised classification with graph con-
volutional networks. arXiv preprint arXiv:1609.02907,
2016.

[Kipf and Welling, 2016b] Thomas N Kipf

and Max
Welling. Variational graph auto-encoders. arXiv preprint
arXiv:1611.07308, 2016.

[Kulkarni and Rodd, 2020] Saurabh Kulkarni and Sunil F
Rodd. Context aware recommendation systems: A review
of the state of the art techniques. Computer Science Re-
view, 37:100255, 2020.

[Kwon and Sadeh, 2004] Oh Byung Kwon and Norman
Sadeh. Applying case-based reasoning and multi-agent
intelligent system to context-aware comparative shopping.
Decision Support Systems, 37(2):199â€“213, 2004.

[Kwon et al., 2006] Ohbyung Kwon, Jong Min Shin, and
Seong Woon Kim. Context-aware multi-agent approach
to pervasive negotiation support systems. Expert Systems
with Applications, 31(2):275â€“285, 2006.

[LeCun, 2022] Yann LeCun. A path towards autonomous
machine intelligence version 0.9. 2, 2022-06-27. Open Re-
view, 62(1), 2022.

[Lee and Hasan Kabir, 2022] Kooktae Lee

and Rabiul
Hasan Kabir. Density-aware decentralised multi-agent

exploration with energy constraint based on optimal trans-
International Journal of Systems Science,
port theory.
53(4):851â€“869, 2022.

[Lee et al., 2011] Sangkeun Lee, Juno Chang, and Sang-
goo Lee. Survey and trend analysis of context-aware
Information-An International Interdisciplinary
systems.
Journal, 14(2):527â€“548, 2011.

[Li and Tan, 2019] Yanjiang Li and Chong Tan. A survey of
the consensus for multi-agent systems. Systems Science &
Control Engineering, 7(1):468â€“482, 2019.

[Li et al., 2021] Chenghao Li, Tonghan Wang, Chengjie Wu,
Qianchuan Zhao, Jun Yang, and Chongjie Zhang. Cel-
ebrating diversity in shared multi-agent reinforcement
learning. Advances in Neural Information Processing Sys-
tems, 34:3991â€“4002, 2021.

[Litimein et al., 2021] Hamida Litimein, Zhen-You Huang,
and Ameer Hamza. A survey on techniques in the
circular formation of multi-agent systems. Electronics,
10(23):2959, 2021.

[Liu and Bucknall, 2018] Yuanchang Liu and Richard Buck-
nall. A survey of formation control and motion planning of
multiple unmanned vehicles. Robotica, 36(7):1019â€“1047,
2018.

[Liu et al., 2022] Lu Liu, Jie Yang, Yaoyuan Zhang, Jingci
Zhang, and Yuxi Ma. An overview of opponent modeling
for multi-agent competition. In International Conference
on Machine Learning for Cyber Security, pages 634â€“648.
Springer, 2022.

[Liu et al., 2023] Yefeng Liu, Jingjing Liu, Zengpeng He,
Zhenhong Li, Qichun Zhang, and Zhengtao Ding. A sur-
vey of multi-agent systems on distributed formation con-
trol. Unmanned Systems, pages 1â€“14, 2023.

[Madaan et al., 2023] Aman Madaan, Niket Tandon, Prakhar
Gupta, Skyler Hallinan, Luyu Gao, Sarah Wiegreffe, Uri
Alon, Nouha Dziri, Shrimai Prabhumoye, Yiming Yang,
et al. Self-refine: Iterative refinement with self-feedback.
arXiv preprint arXiv:2303.17651, 2023.

[Mahajan and Zhang, 2023] Nishtha Mahajan and Qi Zhang.
Intent-aware autonomous driving: A case study on high-
way merging scenarios. arXiv preprint arXiv:2309.13206,
2023.

[McKee et al., 2022] Kevin R McKee, Joel Z Leibo, Charlie
Beattie, and Richard Everett. Quantifying the effects of
environment and population diversity in multi-agent rein-
forcement learning. Autonomous Agents and Multi-Agent
Systems, 36(1):21, 2022.

[Mostafa et al., 2013] Salama A Mostafa, Mohd Sharifud-
din Ahmad, Azhana Ahmad, and Muthukkaruppan An-
namalai. Formulating situation awareness for multi-agent
systems. In 2013 International Conference on Advanced
Computer Science Applications and Technologies, pages
48â€“53. IEEE, 2013.

[Murata, 1989] Tadao Murata. Petri nets: Properties, analy-
sis and applications. Proceedings of the IEEE, 77(4):541â€“
580, 1989.

[Nadi and Edrisi, 2017] Ali Nadi and Ali Edrisi. Adaptive
multi-agent relief assessment and emergency response. In-
ternational journal of disaster risk reduction, 24:12â€“23,
2017.

[Nezamoddini and Gholami, 2022] Nasim Nezamoddini and
Amirhosein Gholami. A survey of adaptive multi-agent
Smart
networks and their applications in smart cities.
Cities, 5(1):318â€“347, 2022.

[Nguyen et al., 2020] Thanh Thi Nguyen, Ngoc Duy
Nguyen, and Saeid Nahavandi.
Deep reinforcement
learning for multiagent systems: A review of challenges,
IEEE transactions on
solutions, and applications.
cybernetics, 50(9):3826â€“3839, 2020.

[Olaru et al., 2013] Andrei Olaru, Adina Magda Florea, and
Amal El Fallah Seghrouchni. A context-aware multi-agent
system as a middleware for ambient intelligence. Mobile
Networks and Applications, 18:429â€“443, 2013.

[Perera et al., 2013] Charith Perera, Arkady Zaslavsky, Peter
Christen, and Dimitrios Georgakopoulos. Context aware
computing for the internet of things: A survey. IEEE com-
munications surveys & tutorials, 16(1):414â€“454, 2013.
[Pradeep and Krishnamoorthy, 2019] Preeja Pradeep and
Shivsubramani Krishnamoorthy. The mom of context-
aware systems: A survey. Computer Communications,
137:44â€“69, 2019.

[Qi and Zhu, 2018] Siyuan Qi and Song-Chun Zhu. Intent-
In 2018
aware multi-agent reinforcement
IEEE international conference on robotics and automation
(ICRA), pages 7533â€“7540. IEEE, 2018.

learning.

[Qian et al., 2023] Chen Qian, Xin Cong, Cheng Yang,
Weize Chen, Yusheng Su, Juyuan Xu, Zhiyuan Liu, and
Maosong Sun. Communicative agents for software devel-
opment. arXiv preprint arXiv:2307.07924, 2023.

[Qin et al., 2016] Jiahu Qin, Qichao Ma, Yang Shi, and Long
Wang. Recent advances in consensus of multi-agent sys-
IEEE Transactions on Industrial
tems: A brief survey.
Electronics, 64(6):4972â€“4983, 2016.

[Ren et al., 2005] Wei Ren, Randal W Beard, and Ella M
Atkins. A survey of consensus problems in multi-agent
coordination. In Proceedings of the 2005, American Con-
trol Conference, 2005., pages 1859â€“1864. IEEE, 2005.
[Riabchuk et al., 2022] Valentyna Riabchuk, Leon Hagel,
Felix Germaine, and Alona Zharova.
Utility-based
context-aware multi-agent recommendation system for en-
ergy efficiency in residential buildings. arXiv preprint
arXiv:2205.02704, 2022.

[Strang and Linnhoff-Popien, 2004] Thomas

and
Claudia Linnhoff-Popien. A context modeling survey. In
Workshop Proceedings, 2004.

Strang

[Sutton and Barto, 2018] Richard S Sutton and Andrew G
Barto. Reinforcement learning: An introduction. MIT
press, 2018.

[Tao et al., 2020] Chaofan Tao, Qinhong Jiang, Lixin Duan,
and Ping Luo. Dynamic and static context-aware lstm for

electric-powered multi-agent systems. Control Engineer-
ing Practice, 79:209â€“218, 2018.

[Yousaf et al., 2023] Shahid Yousaf, Hafiz Mahfooz Ul
Haque, Muhammad Atif, Muhammad Adnan Hashmi, Ab-
bas Khalid, and Phan Cong Vinh. A context-aware multi-
agent reasoning based intelligent assistive formalism. In-
ternet of Things, 23:100857, 2023.

[Yusuf and Baber, 2022] Sagir M Yusuf and Chris Baber.
Formalizing distributed situation awareness in multi-agent
IEEE Transactions on Human-Machine Sys-
networks.
tems, 52(6):1166â€“1175, 2022.

[Zhou et al., 2023] Ziyuan Zhou, Guanjun Liu, and Ying
Tang. Multi-agent reinforcement learning: Methods, ap-
arXiv
plications, visionary prospects, and challenges.
preprint arXiv:2305.10091, 2023.

[Zhu et al., 2022] Changxi Zhu, Mehdi Dastani, and Shihan
Wang. A survey of multi-agent reinforcement learning
with communication. arXiv preprint arXiv:2203.08975,
2022.

In European Conference

multi-agent motion prediction.
on Computer Vision, pages 547â€“563. Springer, 2020.
[Torreno et al., 2017] Alejandro Torreno, Eva Onaindia, An-
tonÂ´Ä±n Komenda, and Michal Ë‡Stolba. Cooperative multi-
agent planning: A survey. ACM Computing Surveys
(CSUR), 50(6):1â€“32, 2017.

[Twardowski and Ryzko, 2015] Bartlomiej Twardowski and
Iot and context-aware mobile rec-
Dominik Ryzko.
In 2015
ommendations using multi-agent systems.
IEEE/WIC/ACM International Conference on Web Intel-
ligence and Intelligent Agent Technology (WI-IAT), vol-
ume 1, pages 33â€“40. IEEE, 2015.

[Vahdat-Nejad et al., 2021] Hamed Vahdat-Nejad, Zahra
Abbasi-Moud, Seyed Abolfazl Eslami, and Wathiq Man-
In
soor. Survey on context-aware healthcare systems.
2021 IEEE 11th annual computing and communication
workshop and conference (CCWC), pages 1190â€“1196.
IEEE, 2021.

[Vladoiu and Constantinescu, 2010] Monica Vladoiu and
Zoran Constantinescu. Learning with a context-aware
multiagent system. In 9th RoEduNet IEEE International
Conference, pages 368â€“373. IEEE, 2010.

[Wan and Alagar, 2008] Kaiyu Wan and Vasu Alagar. A
context-aware trust model for service-oriented multi-agent
systems. In International Conference on Service-Oriented
Computing, pages 221â€“236. Springer, 2008.

[Wang et al., 2023] Lei Wang, Chen Ma, Xueyang Feng,
Zeyu Zhang, Hao Yang, Jingsen Zhang, Zhiyuan Chen,
Jiakai Tang, Xu Chen, Yankai Lin, et al. A survey on large
language model based autonomous agents. arXiv preprint
arXiv:2308.11432, 2023.

[Watkins and Dayan, 1992] Christopher JCH Watkins and
Peter Dayan. Q-learning. Machine learning, 8:279â€“292,
1992.

[Watson and Marir, 1994] Ian Watson and Farhi Marir. Case-
based reasoning: A review. The knowledge engineering
review, 9(4):327â€“354, 1994.

[Wu et al., 2020] Zonghan Wu, Shirui Pan, Fengwen Chen,
Guodong Long, Chengqi Zhang, and S Yu Philip. A com-
prehensive survey on graph neural networks. IEEE trans-
actions on neural networks and learning systems, 32(1):4â€“
24, 2020.

[Wu et al., 2023] Xiyang Wu, Rohan Chandra, Tianrui
iplan:
Guan, Amrit Singh Bedi, and Dinesh Manocha.
Intent-aware planning in heterogeneous traffic via dis-
arXiv
tributed multi-agent
reinforcement
preprint arXiv:2306.06236, 2023.

learning.

[Xie et al., 2021] Xu Xie, Chi Zhang, Yixin Zhu, Ying Nian
Wu, and Song-Chun Zhu. Congestion-aware multi-agent
In 2021
trajectory prediction for collision avoidance.
IEEE International Conference on Robotics and Automa-
tion (ICRA), pages 13693â€“13700. IEEE, 2021.

[Yan et al., 2018] Chuan Yan, Huazhen Fang, and Haiyang
Chao. Energy-aware leader-follower tracking control for

